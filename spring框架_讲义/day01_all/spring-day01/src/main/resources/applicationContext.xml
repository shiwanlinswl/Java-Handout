<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 利用无参构造器创建对象 -->
	<!-- 
		bean: 被容器管理的对象。
		id:bean的名称，要求唯一。
		class:要写的类的完整的名字。
			注(了解): Spring容器利用java反射来查找类的字节码
				文件，然后完成类的加载。
	 -->
	<bean id="a1" class="first.Apple"/>
	
	<bean id="date1" class="java.util.Date"/>
	
	<!-- 利用静态工厂方法创建对象 -->
	<!-- 
		factory-method:指定一个静态方法。
		注： 容器会调用该方法来创建对象。
		Calendar c = Calendar.getInstance();
	 -->
	<bean id="cal1" class="java.util.Calendar" 
	factory-method="getInstance"/>
	
	<!-- 利用实例工厂方法来创建对象 -->
	<!-- 
		factory-bean:指定一个bean的id。
		容器会调用该bean的实例方法来创建对象。
	 -->
	<bean id="time1" 
	factory-bean="cal1" 
	factory-method="getTime"/>
	
	
	
	
	
</beans>